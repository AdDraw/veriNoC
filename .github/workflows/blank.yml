# This is a basic workflow to help you get started with Actions

name: Sim + Synth + Formal CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: PIP3 Requirements
        run: pip3 install -r requirements.txt

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  formal:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Arbiter
        run: |
          cd sim/formal
          sby -f arb.sby

      - name: FIFO
        run: |
          cd sim/formal
          sby -f fifo.sby

      - name: RouterXY
        run: |
          cd sim/formal
          sby -f rtr.sby

      - name: XY_SWITCH
        run: |
          cd sim/formal
          sby -f xy_switch.sby

  functional_presynth:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: [build, synth, formal]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: FIFO
        run: |
          cd sim/functional/circ_fifo_sim
          python3 run_and_verify.py

      - name: XY_switch
        run: |
          cd sim/functional/xy_switch
          python3 run_and_verify.py -tf 1

      - name: Mesh XY Single
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ff_depth 6 -pckt_w 14

      - name: Mesh XY Regression
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ff_depth 6 -pckt_w 14 -regression 1

  functional_postsynth:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: [build, synth, formal, functional_presynth]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: FIFO
        run: |
          cd synth/
          ./yosys_wrapper.sh -sf fifo_synth.tcl FIFO_DEPTH_WIDTH=2 DATA_WIDTH=8 --no-xdot
          cd ../sim/functional/circ_fifo_sim
          python3 run_and_verify.py -ps 1

      - name: Mesh XY 2x2
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ps 1 -synth 1 -ff_depth 4 -pckt_w 12 -row_n 2 -col_m 2

      - name: Mesh XY 2x3
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ps 1 -synth 1 -ff_depth 4 -pckt_w 13 -row_n 2 -col_m 3

      - name: Mesh XY 3x3
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ps 1 -synth 1 -ff_depth 4 -pckt_w 13 -row_n 3 -col_m 3

      - name: Mesh XY 4x4
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf 1 -ps 1 -synth 1 -ff_depth 4 -pckt_w 14 -row_n 4 -col_m 4

  synth:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: fifo synth
        run: |
          cd synth
          ./yosys_wrapper.sh -sf fifo_synth.tcl --no-xdot

      - name: mesh_xy noc synth
        run: |
          cd synth
          ./yosys_wrapper.sh -sf mesh_xy_noc.tcl --no-xdot

      - name: sw_xy synth
        run: |
          cd synth
          ./yosys_wrapper.sh -sf sw_xy_synth.tcl --no-xdot

      - name: router synth
        run: |
          cd synth
          ./yosys_wrapper.sh -sf router_synth.tcl --no-xdot
