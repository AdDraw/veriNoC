# This is a basic workflow to help you get started with Actions

name: NoC Measurements

# Controls when the action will run.
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  mesh_xy_noc:
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: XY NoC FF_D 2
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 2 -row_n 3 -col_m 3
      - name: XY NoC FF_D 3
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 3 -row_n 3 -col_m 3

      - name: XY NoC FF_D 4
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 4 -row_n 3 -col_m 3

      - name: XY NoC 4x4 FF_D 2
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 2 -row_n 4 -col_m 4

      - name: XY NoC 4x4 FF_D 3
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 3 -row_n 4 -col_m 4

      - name: XY NoC 4x4 FF_D 4
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 4 -row_n 4 -col_m 4

      - name: XY NoC 5x5
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 2 -row_n 5 -col_m 5

      - name: XY NoC 5x5 FF_D 3
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 3 -row_n 5 -col_m 5

      - name: XY NoC 5x5 FF_D 4
        run: |
          cd sim/functional/mesh_xy_noc
          python3 run_and_verify.py -tf -ff_depth 4 -row_n 5 -col_m 5

      - name: Upload JSONs
        uses: actions/upload-artifact@v2
        with:
          name: mesh_xy_noc
          path: sim/functional/mesh_xy_noc/*.json

  mesh_wh_xy_noc:
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Wormhole XY NoC FF_D 2
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 2 -row_n 3 -col_m 3

      - name: Wormhole XY NoC FF_D 3
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 3 -row_n 3 -col_m 3

      - name: Wormhole XY NoC FF_D 4
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 4 -row_n 3 -col_m 3

      - name: Wormhole XY NoC 4x4 FF_D 2
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 2 -row_n 4 -col_m 4

      - name: Wormhole XY NoC 4x4 FF_D 3
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 3 -row_n 4 -col_m 4

      - name: Wormhole XY NoC 4x4 FF_D 4
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 4 -row_n 4 -col_m 4

      - name: Wormhole XY NoC 5x5
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 2 -row_n 5 -col_m 5

      - name: Wormhole XY NoC 5x5 FF_D 3
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 3 -row_n 5 -col_m 5

      - name: Wormhole XY NoC 5x5 FF_D 4
        run: |
          cd sim/functional/mesh_wh_xy_noc
          python3 run_and_verify.py -ff_depth 4 -row_n 5 -col_m 5

      - name: Upload JSONs
        uses: actions/upload-artifact@v2
        with:
          name: mesh_wh_xy_noc
          path: sim/functional/mesh_wh_xy_noc/*.json
